#!/bin/sh
# @description re-initialise the agent to make it be seen as a new node on the server
# @man This command will delete all local agent data, including its uuid and
# @man keys, and also reset the agent internal state.
# @man The only configuration kept is the server hostname or ip configured in _policy_server.dat_.
# @man It will also send an inventory to the server, which will treat it as a new node inventory.
# @man +
# @man *WARNING*: This command will permanently delete your node uuid and keys, and no configuration will
# @man be applied before re-accepting and configuring the node on the server.
# @man +
# @man *Options*:
# @man +
# @man *-f*: force the reinitialization without asking for confirmation
# @man +
# @man *-i*: run the agent in information mode, prints basic information
# @man +
# @man *-v*: run the agent in verbose mode, prints detailed information
# @man +
# @man *-d*: run the agent in debug mode, prints low-level information
# @man +
# @man *-q*: run the agent in quiet mode (display only error messages)
# @man +
# @man *-w*: show full strings, never cut output
# @man +
# @man *-c*: run the agent without color output
# @man +
# @man *-T*: display timing information
# @man +
# @man *-r*: run the agent with raw output
# @man +
# @man *-R*: run the agent in completely unparsed mode, with no return code of 1 in case of error. A little faster.

. "${BASEDIR}/../lib/common.sh"

VERBOSE=false
QUIET=false
FORCE=0

while getopts "iIvdqcTf" opt; do
  case $opt in
    i|I|v|d)
      VERBOSE=true
      QUIET=false
      ;;
    q)
      VERBOSE=false
      QUIET=true
      ;;
    c)
      clear_colors
      ;;
    T)
      TIMING=1
      ;;
    f)
      FORCE=1
      ;;
  esac
done

if [ "$(cat /opt/rudder/etc/uuid.hive 2>/dev/null)" = "root" ]
then
  echo "Reinitializing the root server breaks the agents. ABORTING!" >&2
  exit 1
fi

if [ ${FORCE} -eq 0 ]
then
  echo "Reinitializing a node removes its UUID, its keys and its associated directives!"
  echo "You will need to remove this node from the server and accept it again if it was already accepted."
  echo "Do yo really want to do it?"
  echo "Type ctrl-c to abort now or enter to continue"
  read a
fi

# Backup essential files
[ "$VERBOSE" = true ] && echo "Making a backup copy of essential files into /var/backups/rudder"
mkdir -p /var/backups/rudder
cp -f /opt/rudder/etc/uuid.hive /var/backups/rudder/uuid-$(date +%Y%m%d).hive 2>/dev/null
cp -f /var/rudder/cfengine-community/policy_server.dat /var/backups/rudder/policy_server.dat-$(date +%Y%m%d) 2>/dev/null
cp -af /var/rudder/cfengine-community/ppkeys/ /var/backups/rudder/ppkeys-$(date +%Y%m%d) 2>/dev/null

# - replace ppkeys
[ "$VERBOSE" = true ] && echo "Removing the agent keys..."
rm -f /var/rudder/cfengine-community/ppkeys/localhost*
[ "$VERBOSE" = true ] && echo "Generating a new key pair..."
/var/rudder/cfengine-community/bin/cf-key
openssl genrsa -des3 -out /var/rudder/cfengine-community/ppkeys/localhost.priv -passout "pass:Cfengine passphrase"
openssl rsa -in /var/rudder/cfengine-community/ppkeys/localhost.priv -passin "pass:Cfengine passphrase" -RSAPublicKey_out -out /var/rudder/cfengine-community/ppkeys/localhost.pub

# - generate a new uuid
[ "$VERBOSE" = true ] && echo "Generating a new uuid..."
if [ -x /opt/rudder/bin/uuidgen ]
then
  /opt/rudder/bin/uuidgen > /opt/rudder/etc/uuid.hive
else
  uuidgen > /opt/rudder/etc/uuid.hive
fi

# - remove old inventory
[ "$VERBOSE" = true ] && echo "Removing old inventory..."
rm -rf /opt/rudder/var/fusioninventory/*
rm -rf /var/rudder/tmp/inventory/*

# - reset cfengine status
${RUDDER_BIN} agent reset

[ "$VERBOSE" = true ] && echo "Triggering an inventory..."

# - resend inventory
${RUDDER_BIN} agent inventory "$@"
