#!/bin/sh
# @description display a summary of agent information
# @man Outputs detailed information about the agent configuration, especially
# @man what defines the node (hostname, uuid and key hash) and its
# @man policy server.

OS=$(uname -s)

if [ "${OS}" = "Linux" ]; then
  HOSTNAME=$(hostname --fqdn)
else
  HOSTNAME=$(hostname)
fi
[ $? -ne 0 ] && HOSTNAME="not found"

UUID=$(cat /opt/rudder/etc/uuid.hive 2>/dev/null)
[ $? -ne 0 ] && UUID="Not yet configured"

HASH=$(openssl dgst -sha1 /var/rudder/cfengine-community/ppkeys/localhost.pub 2>/dev/null)
[ $? -ne 0 ] && HASH="Not yet configured"
HASH=$(echo "${HASH}" | sed -e 's/.*= //')

POLICY=$(cat /var/rudder/cfengine-community/policy_server.dat 2>/dev/null)
[ $? -ne 0 ] && POLICY="Not yet configured"

POLICY_FETCHED=$(stat -c %y /var/rudder/cfengine-community/last_successful_inputs_update 2> /dev/null)
[ $? -ne 0 ] && POLICY_FETCHED="Not yet updated" || POLICY_FETCHED=$(echo "${POLICY_FETCHED}" | cut -d'.' -f1)

INVENTORY_SENT=$(stat -c %y /var/rudder/tmp/inventory_sent 2> /dev/null)
[ $? -ne 0 ] && INVENTORY_SENT="Not yet sent" || INVENTORY_SENT=$(echo "${INVENTORY_SENT}" | cut -d'.' -f1)

ROLES=$(ls -m /opt/rudder/etc/server-roles.d/ 2>/dev/null)
if [ $? -ne 0 ]; then
  ROLES="rudder-agent"
else
  ROLES="${ROLES}, rudder-agent"
fi

if [ "${UUID}" != "root" ]
then
  if [ -d /var/rudder/share ]
  then
    ROLES="${ROLES}, rudder-relay"
  elif [ -d /var/rudder/inventories/incoming ]
  then
    ROLES="${ROLES}, rudder-relay (not registered)"
  fi
fi

if [ -e /opt/rudder/etc/disable-agent ]; then
  ENABLED="disabled"
else
  ENABLED="enabled"
fi

VERSION=$(rudder agent version)

echo "Hostname: ${HOSTNAME}"
echo "UUID: ${UUID}"
echo "Key Hash: ${HASH}"
echo "Policy server: ${POLICY}"
echo "Roles: ${ROLES}"
echo "Agent is ${ENABLED}"
echo "Policy updated: ${POLICY_FETCHED}"
echo "Inventory sent: ${INVENTORY_SENT}"
echo "Version: ${VERSION}"
