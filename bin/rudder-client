#!/bin/sh

set -e

. "/opt/rudder/share/lib/common.sh"

if [ -x "/opt/rudder/bin/curl" ]; then
  CURL="/opt/rudder/bin/curl"
else
  CURL="curl"
fi

# Always on options
CURL_OPTS="--tlsv1.3 --location --fail --connect-timeout 10"
ERROR_OPT="--show-error"
CURL_VERBOSITY="--silent"
EXEC="exec"

## Get options
while [ "$1" != "" ]
do
  if [ "$1" = "-h" ]; then
    echo "Usage $0 -e <endpoint> [-u <user:password>] [-n] [-h] -- <curl_options>"
    echo "  -e <endpoint>: rudder endpoint, example /inventory-updates"
    echo "  -u <user:password>: force user and password, default is to take it from rudder.json"
    echo "  -r : do not show any result, just HTTP code"
    echo "  -h : help"
    echo "  -n : do not run, display curl command instead"
    echo "  -v : verbose"
    exit
  elif [ "$1" = "-e" ]; then
    ENDPOINT="$2"
    shift 2
  elif [ "$1" = "-u" ]; then
    AUTH="--user $2"
    shift 2
  elif [ "$1" = "-r" ]; then
    ERROR_OPT="--output /dev/null --write-out %{http_code}"
    shift
  elif [ "$1" = "-n" ]; then
    EXEC="echo"
    shift
  elif [ "$1" = "-v" ]; then
    CURL_VERBOSITY=""
    shift
  elif [ "$1" = "--" ]; then
    shift
    break
  else
    echo "Unknown parameter $1, try -h for help" >&2
    # codes before are taken by curl
    exit 127
  fi
done
if [ "${ENDPOINT}" = "" ]; then
  echo "You need to pass an endpoint, try -h for help" >&2
  exit 127
fi

## Get configuration
PROXY=$(agent_conf https_proxy)

# get server form configuration
SERVER=$(agent_conf server)
if [ "${SERVER}" = "" ]; then
  # get server from policy_server.dat
  SERVER=$(cut -d: -f1 "${RUDDER_VAR}/cfengine-community/policy_server.dat")
fi

PORT=$(get_https_port)

# Try to read local hash
if [ -f "${SERVER_HASH_FILE}" ]; then
  PINNED_HASH=$(cat ${SERVER_HASH_FILE})
fi

if [ -f "${RUDDER_JSON}" ]; then
  # Read hash from policies and update if necessary
  INPUTS_PINNED_HASH=$(rudder_json_value 'POLICY_SERVER_KEY_HASH')
  if [ "${INPUTS_PINNED_HASH}" != "" ]; then
    if [ "${INPUTS_PINNED_HASH}" != "${PINNED_HASH}" ]; then
      PINNED_HASH="${INPUTS_PINNED_HASH}"
      echo "${PINNED_HASH}" > "${SERVER_HASH_FILE}"
    fi
  fi
fi

if [ "${PINNED_HASH}" != "" ]; then
  SECOPTS="--pinnedpubkey ${PINNED_HASH} --insecure"
else
  # only allowed in initial policies and with 6.X server
  SECOPTS="--insecure"
fi

# get server authentication from rudder.json if available and not overridden
if [ "${AUTH}" = "" ]; then
  if [ -f "${RUDDER_JSON}" ]; then
    DAVUSER=$(rudder_json_value 'DAVUSER')
    DAVPW=$(rudder_json_value 'DAVPASSWORD')
    AUTH="--user ${DAVUSER}:${DAVPW}"
  fi
fi

## Create URL
URL="https://${SERVER}${PORT}${ENDPOINT}"

## Other arguments are curl arguments
# advantage of exec:
# - one process less
# - don't care if there is some code after it
# - keeps return code
if [ "${PROXY}" = "system" ]
then
  ${EXEC} ${CURL} ${CURL_OPTS} ${CURL_VERBOSITY} ${ERROR_OPT} ${SECOPTS} ${AUTH} ${URL} "$@"
else
  ${EXEC} ${CURL} ${CURL_OPTS} ${CURL_VERBOSITY} ${ERROR_OPT} ${SECOPTS} --proxy "${PROXY}" ${AUTH} ${URL} "$@"
fi
